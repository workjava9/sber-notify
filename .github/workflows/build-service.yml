name: build-service

on:
  workflow_call:
    inputs:
      service: { required: true, type: string }
      dir:     { required: true, type: string }
      image:   { required: true, type: string }
    secrets:
      DOCKER_USERNAME: { required: false }
      DOCKER_PASSWORD: { required: false }

jobs:
  build:
    runs-on: ubuntu-latest
    concurrency: svc-${{ inputs.service }}
    steps:
      - uses: actions/checkout@v4

      - name: Setup JDK 17 + Gradle cache
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'
          cache: gradle

      - name: Build JAR (monorepo subproject)
        run: ./gradlew ${{ inputs.service }}-service:clean ${{ inputs.service }}-service:build --no-daemon -Dorg.gradle.parallel=true

      - name: Docker login (GHCR or Docker Hub)
        uses: docker/login-action@v3
        with:
          registry: ${{ startsWith(inputs.image, 'ghcr.io') && 'ghcr.io' || 'docker.io' }}
          username: ${{ secrets.DOCKER_USERNAME || github.actor }}
          password: ${{ secrets.DOCKER_PASSWORD || secrets.GITHUB_TOKEN }}

      - uses: docker/setup-buildx-action@v3

      - name: Compute tags
        id: tags
        run: |
          set -euo pipefail
          if [[ "${GITHUB_REF_TYPE}" == "tag" ]]; then
            echo "ver=${{ inputs.image }}:${GITHUB_REF_NAME}" >> $GITHUB_OUTPUT
          else
            echo "ver=${{ inputs.image }}:latest" >> $GITHUB_OUTPUT
          fi
          echo "sha=${{ inputs.image }}:sha-${GITHUB_SHA::7}" >> $GITHUB_OUTPUT

      - name: Build & push (cache to GHA)
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ${{ inputs.dir }}/Dockerfile
          push: true
          tags: |
            ${{ steps.tags.outputs.sha }}
            ${{ steps.tags.outputs.ver }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          provenance: false
